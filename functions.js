const ns = [
  "alert",
  "alterReality",
  "applyToCompany",
  "args",
  "asleep",
  "atExit",
  "bladeburner",
  "brutessh",
  "bypass",
  "checkFactionInvitations",
  "clear",
  "clearLog",
  "clearPort",
  "codingcontract",
  "commitCrime",
  "connect",
  "corporation",
  "createProgram",
  "deleteServer",
  "disableLog",
  "donateToFaction",
  "enableLog",
  "exec",
  "exit",
  "exploit",
  "fileExists",
  "flags",
  "formulas",
  "ftpcrack",
  "gang",
  "getAugmentationCost",
  "getAugmentationPrereq",
  "getAugmentationPrice",
  "getAugmentationRepReq",
  "getAugmentationStats",
  "getAugmentationsFromFaction",
  "getBitNodeMultipliers",
  "getCharacterInformation",
  "getCompanyFavor",
  "getCompanyFavorGain",
  "getCompanyRep",
  "getCrimeChance",
  "getCrimeStats",
  "getCurrentServer",
  "getFactionFavor",
  "getFactionFavorGain",
  "getFactionRep",
  "getFavorToDonate",
  "getGrowTime",
  "getHackTime",
  "getHackingLevel",
  "getHackingMultipliers",
  "getHacknetMultipliers",
  "getHostname",
  "getOwnedAugmentations",
  "getOwnedSourceFiles",
  "getPlayer",
  "getPortHandle",
  "getPurchasedServerCost",
  "getPurchasedServerLimit",
  "getPurchasedServerMaxRam",
  "getPurchasedServers",
  "getRunningScript",
  "getScriptExpGain",
  "getScriptIncome",
  "getScriptLogs",
  "getScriptName",
  "getScriptRam",
  "getServer",
  "getServerBaseSecurityLevel",
  "getServerGrowth",
  "getServerMaxMoney",
  "getServerMaxRam",
  "getServerMinSecurityLevel",
  "getServerMoneyAvailable",
  "getServerNumPortsRequired",
  "getServerRam",
  "getServerRequiredHackingLevel",
  "getServerSecurityLevel",
  "getServerUsedRam",
  "getStats",
  "getTimeSinceLastAug",
  "getUpgradeHomeCoresCost",
  "getUpgradeHomeRamCost",
  "getWeakenTime",
  "goToLocation",
  "grow",
  "growthAnalyze",
  "growthAnalyzeSecurity",
  "gymWorkout",
  "hack",
  "hackAnalyze",
  "hackAnalyzeChance",
  "hackAnalyzeSecurity",
  "hackAnalyzeThreads",
  "hacknet",
  "hasRootAccess",
  "heart",
  "hospitalize",
  "httpworm",
  "installAugmentations",
  "installBackdoor",
  "isBusy",
  "isFocused",
  "isLogEnabled",
  "isRunning",
  "joinFaction",
  "kill",
  "killall",
  "ls",
  "manualHack",
  "nFormat",
  "nuke",
  "peek",
  "print",
  "prompt",
  "ps",
  "purchaseAugmentation",
  "purchaseProgram",
  "purchaseServer",
  "purchaseTor",
  "read",
  "readPort",
  "relaysmtp",
  "rm",
  "run",
  "scan",
  "scp",
  "scriptKill",
  "scriptRunning",
  "serverExists",
  "setFocus",
  "sleep",
  "sleeve",
  "softReset",
  "spawn",
  "sprintf",
  "sqlinject",
  "stanek",
  "stock",
  "stopAction",
  "tFormat",
  "tail",
  "toast",
  "tprint",
  "tprintf",
  "travelToCity",
  "tryWritePort",
  "ui",
  "universityCourse",
  "upgradeHomeCores",
  "upgradeHomeRam",
  "vsprintf",
  "weaken",
  "weakenAnalyze",
  "wget",
  "workForCompany",
  "workForFaction",
  "write",
  "writePort"
]

const stock = [
  "buy",
  "cancelOrder",
  "getAskPrice",
  "getBidPrice",
  "getForecast",
  "getMaxShares",
  "getOrders",
  "getPosition",
  "getPrice",
  "getPurchaseCost",
  "getSaleGain",
  "getSymbols",
  "getVolatility",
  "placeOrder",
  "purchase4SMarketData",
  "purchase4SMarketDataTixApi",
  "sell",
  "sellShort",
  "short"
]

const hacknet = [
  "getCacheUpgradeCost",
  "getCoreUpgradeCost",
  "getHashUpgradeLevel",
  "getHashUpgrades",
  "getLevelUpgradeCost",
  "getNodeStats",
  "getPurchaseNodeCost",
  "getRamUpgradeCost",
  "getStudyMult",
  "getTrainingMult",
  "hashCapacity",
  "hashCost",
  "maxNumNodes",
  "numHashes",
  "numNodes",
  "purchaseNode",
  "spendHashes",
  "upgradeCache",
  "upgradeCore",
  "upgradeLevel",
  "upgradeRam"
]

const gang = [
  "ascendMember",
  "canRecruitMember",
  "createGang",
  "getAscensionResult",
  "getBonusTime",
  "getChanceToWinClash",
  "getEquipmentCost",
  "getEquipmentNames",
  "getEquipmentStats",
  "getEquipmentType",
  "getGangInformation",
  "getMemberInformation",
  "getMemberNames",
  "getOtherGangInformation",
  "getTaskNames",
  "getTaskStats",
  "inGang",
  "purchaseEquipment",
  "recruitMember",
  "setMemberTask",
  "setTerritoryWarfare"
]
